# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package MacOS & Windows

on:
    workflow_dispatch:
    schedule:
      - cron: '23 2 5 * *'

#   push:
#     branches: [ "main", "main-1.0" ]
#   pull_request:
#     branches: [ "main", "main-1.0" ]

jobs:
  build:
    # runs-on: [ ubuntu-latest ]
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11", "3.12"]
        os: [ windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install .
        python -m pip install ".[dev]"
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with ruff
      run: | 
        ruff check src tests
    - name: Test with mypy
      run: |
        mypy -m pyutils
    - name: Format with ruff
      run: | 
        ruff format src tests
        ruff check --fix src tests
    - name: Test with pytest
      run: |
        pytest --cov .
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}  # ignore
